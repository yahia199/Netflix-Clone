{"ast":null,"code":"import _regeneratorRuntime from \"/home/yahia/class18/Netflix-Clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/yahia/class18/Netflix-Clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/yahia/class18/Netflix-Clone/src/components/ModalMovie/modelmovie.jsx\";\n// import React from \"react\";\n// import { Button } from \"react-bootstrap\";\n// import { Modal } from \"react-bootstrap\";\n// function mytrendModal({ trend, show, handleClose }) {\n//   console.log(trend);\n//   return (\n//     <Modal show={show} onHide={handleClose}>\n//       <Modal.Header closeButton>\n//         <Modal.Title> {trend.title} </Modal.Title>\n//       </Modal.Header>\n//       <Modal.Body>\n//         <p>Modal body text goes here.</p>\n//       </Modal.Body>\n//       <Modal.Footer>\n//         <Button variant=\"secondary\">Close</Button>\n//         <Button variant=\"primary\">Save changes</Button>\n//       </Modal.Footer>\n//     </Modal>\n//   );\n// }\n// export default mytrendModal;\nimport React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Modal } from \"react-bootstrap\";\nimport swal from 'sweetalert';\nimport { Form } from \"react-bootstrap\";\n\nfunction mytrendModal(_ref) {\n  var _this = this;\n\n  var trend = _ref.trend,\n      show = _ref.show,\n      handleClose = _ref.handleClose,\n      addToFavList = _ref.addToFavList;\n  return function (trend, addToFavList) {\n    function handelFormSubmit(e) {\n      e.preventDefault(); // To send a POST request to save the recipe in our database as favorite recipe\n\n      addToFavList(trend);\n    }\n\n    function addToFavList(_x) {\n      return _addToFavList.apply(this, arguments);\n    }\n\n    function _addToFavList() {\n      _addToFavList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(trend) {\n        var url, data, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                url = \"\".concat(process.env.REACT_APP_SERVER, \"/addmovie\"); // This should match the required data in the server\n\n                data = {\n                  title: trend.title,\n                  poster_path: trend.poster_path,\n                  overview: trend.overview\n                }; // Use Fetch to send POST request\n\n                _context.next = 4;\n                return fetch(url, {\n                  method: 'POST',\n                  // *GET, POST, PUT, DELETE, etc.\n                  headers: {\n                    'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n                  },\n                  body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\n                });\n\n              case 4:\n                response = _context.sent;\n                swal(\"Favorite trend\", \"You added a new trend\", \"success\");\n                handleClose();\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _addToFavList.apply(this, arguments);\n    }\n\n    return /*#__PURE__*/React.createElement(Modal, {\n      show: show,\n      onHide: handleClose,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, \" titlee \")), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: handelFormSubmit,\n      style: {\n        margin: \"0 10px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formBasicEmail\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, \"Comment\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"comment\",\n      type: \"text\",\n      placeholder: \"Enter Comment\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, \"Submit\")), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, \"Save changes\")));\n  }(trend, addToFavList);\n}\n\nexport default mytrendModal;","map":{"version":3,"sources":["/home/yahia/class18/Netflix-Clone/src/components/ModalMovie/modelmovie.jsx"],"names":["React","Button","Modal","swal","Form","mytrendModal","trend","show","handleClose","addToFavList","handelFormSubmit","e","preventDefault","url","process","env","REACT_APP_SERVER","data","title","poster_path","overview","fetch","method","headers","body","JSON","stringify","response","margin"],"mappings":"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","sourcesContent":["// import React from \"react\";\n// import { Button } from \"react-bootstrap\";\n// import { Modal } from \"react-bootstrap\";\n\n// function mytrendModal({ trend, show, handleClose }) {\n//   console.log(trend);\n//   return (\n//     <Modal show={show} onHide={handleClose}>\n//       <Modal.Header closeButton>\n//         <Modal.Title> {trend.title} </Modal.Title>\n//       </Modal.Header>\n\n//       <Modal.Body>\n//         <p>Modal body text goes here.</p>\n//       </Modal.Body>\n\n//       <Modal.Footer>\n//         <Button variant=\"secondary\">Close</Button>\n//         <Button variant=\"primary\">Save changes</Button>\n//       </Modal.Footer>\n//     </Modal>\n//   );\n// }\n\n// export default mytrendModal;\n\nimport React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Modal } from \"react-bootstrap\";\nimport swal from 'sweetalert';\nimport { Form } from \"react-bootstrap\";\n\nfunction mytrendModal({ trend, show, handleClose, addToFavList }) {\n\n  function handelFormSubmit(e) {\n    e.preventDefault();\n    // To send a POST request to save the recipe in our database as favorite recipe\n    addToFavList(trend);\n  }\n\n  async function addToFavList(trend) {\n    const url = `${process.env.REACT_APP_SERVER}/addmovie`\n    // This should match the required data in the server\n    const data = {\n      title: trend.title,\n      poster_path: trend.poster_path,\n      overview: trend.overview,\n    }\n    // Use Fetch to send POST request\n    const response = await fetch(url, {\n      method: 'POST', // *GET, POST, PUT, DELETE, etc.\n      headers: {\n        'Content-Type': 'application/json'\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n    });\n    swal(\"Favorite trend\", \"You added a new trend\", \"success\");\n    handleClose();\n  }\n\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title> titlee </Modal.Title>\n      </Modal.Header>\n      <Form onSubmit={handelFormSubmit} style={{ margin: \"0 10px\" }}>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label>Comment</Form.Label>\n          <Form.Control name=\"comment\" type=\"text\" placeholder=\"Enter Comment\" />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n      <Modal.Footer>\n        <Button variant=\"secondary\">Close</Button>\n        <Button variant=\"primary\">Save changes</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default mytrendModal;\n"]},"metadata":{},"sourceType":"module"}