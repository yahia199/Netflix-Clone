{"ast":null,"code":"import _regeneratorRuntime from \"/home/yahia/class18/Netflix-Clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/yahia/class18/Netflix-Clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/yahia/class18/Netflix-Clone/src/components/ModalMovie/modelmovie.jsx\";\n// import React from \"react\";\n// import { Button } from \"react-bootstrap\";\n// import { Modal } from \"react-bootstrap\";\n// function mytrendModal({ trend, show, handleClose }) {\n//   console.log(trend);\n//   return (\n//     <Modal show={show} onHide={handleClose}>\n//       <Modal.Header closeButton>\n//         <Modal.Title> {trend.title} </Modal.Title>\n//       </Modal.Header>\n//       <Modal.Body>\n//         <p>Modal body text goes here.</p>\n//       </Modal.Body>\n//       <Modal.Footer>\n//         <Button variant=\"secondary\">Close</Button>\n//         <Button variant=\"primary\">Save changes</Button>\n//       </Modal.Footer>\n//     </Modal>\n//   );\n// }\n// export default mytrendModal;\nimport React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Modal } from \"react-bootstrap\";\nimport swal from 'sweetalert';\nimport { Form } from \"react-bootstrap\";\n\nfunction mytrendModal(_ref) {\n  var trend = _ref.trend,\n      show = _ref.show,\n      handleClose = _ref.handleClose;\n\n  function handelFormSubmit(e) {\n    e.preventDefault(); // To send a POST request to save the recipe in our database as favorite recipe\n\n    addToFavList(trend);\n  }\n\n  function addToFavList(_x) {\n    return _addToFavList.apply(this, arguments);\n  }\n\n  function _addToFavList() {\n    _addToFavList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(trend) {\n      var url, data, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = \"\".concat(process.env.REACT_APP_SERVER, \"/addmovie\"); // This should match the required data in the server\n\n              data = {\n                title: trend.title,\n                poster_path: trend.poster_path,\n                overview: trend.overview\n              }; // Use Fetch to send POST request\n\n              _context.next = 4;\n              return fetch(url, {\n                method: 'POST',\n                // *GET, POST, PUT, DELETE, etc.\n                headers: {\n                  'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n                },\n                body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\n              });\n\n            case 4:\n              response = _context.sent;\n              swal(\"Favorite trend\", \"You added a new trend\", \"success\");\n              handleClose();\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _addToFavList.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \" titlee \")), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handelFormSubmit,\n    style: {\n      margin: \"0 10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"formBasicEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"Comment\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"comment\",\n    type: \"text\",\n    placeholder: \"Enter Comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Save changes\")));\n}\n\nexport default mytrendModal;","map":{"version":3,"sources":["/home/yahia/class18/Netflix-Clone/src/components/ModalMovie/modelmovie.jsx"],"names":["React","Button","Modal","swal","Form","mytrendModal","trend","show","handleClose","handelFormSubmit","e","preventDefault","addToFavList","url","process","env","REACT_APP_SERVER","data","title","poster_path","overview","fetch","method","headers","body","JSON","stringify","response","margin"],"mappings":"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","sourcesContent":["// import React from \"react\";\n// import { Button } from \"react-bootstrap\";\n// import { Modal } from \"react-bootstrap\";\n\n// function mytrendModal({ trend, show, handleClose }) {\n//   console.log(trend);\n//   return (\n//     <Modal show={show} onHide={handleClose}>\n//       <Modal.Header closeButton>\n//         <Modal.Title> {trend.title} </Modal.Title>\n//       </Modal.Header>\n\n//       <Modal.Body>\n//         <p>Modal body text goes here.</p>\n//       </Modal.Body>\n\n//       <Modal.Footer>\n//         <Button variant=\"secondary\">Close</Button>\n//         <Button variant=\"primary\">Save changes</Button>\n//       </Modal.Footer>\n//     </Modal>\n//   );\n// }\n\n// export default mytrendModal;\n\nimport React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Modal } from \"react-bootstrap\";\nimport swal from 'sweetalert';\nimport { Form } from \"react-bootstrap\";\n\nfunction mytrendModal({ trend, show, handleClose }) {\n\n  function handelFormSubmit(e) {\n    e.preventDefault();\n    // To send a POST request to save the recipe in our database as favorite recipe\n    addToFavList(trend);\n  }\n\n  async function addToFavList(trend) {\n    const url = `${process.env.REACT_APP_SERVER}/addmovie`\n    // This should match the required data in the server\n    const data = {\n      title: trend.title,\n      poster_path: trend.poster_path,\n      overview: trend.overview,\n    }\n    // Use Fetch to send POST request\n    const response = await fetch(url, {\n      method: 'POST', // *GET, POST, PUT, DELETE, etc.\n      headers: {\n        'Content-Type': 'application/json'\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n    });\n    swal(\"Favorite trend\", \"You added a new trend\", \"success\");\n    handleClose();\n  }\n\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title> titlee </Modal.Title>\n      </Modal.Header>\n      <Form onSubmit={handelFormSubmit} style={{ margin: \"0 10px\" }}>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label>Comment</Form.Label>\n          <Form.Control name=\"comment\" type=\"text\" placeholder=\"Enter Comment\" />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n      <Modal.Footer>\n        <Button variant=\"secondary\">Close</Button>\n        <Button variant=\"primary\">Save changes</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default mytrendModal;\n"]},"metadata":{},"sourceType":"module"}